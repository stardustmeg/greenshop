$transition-duration: 0.2s;
$transform-scale: 0.9;
$transform-scale-active: 0.9;
$filter-opacity: 0.5;
$filter-brightness: 1.3;

@mixin green-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  justify-self: center;
  border-radius: var(--medium-br);
  padding: calc(var(--small-offset) / 3) var(--small-offset);
  width: max-content;
  font: var(--regular-font);
  letter-spacing: var(--one);
  color: var(--button-white);
  background-color: var(--steam-green-800);
  transition:
    filter $transition-duration,
    color $transition-duration,
    background-color $transition-duration,
    transform $transition-duration;

  svg {
    fill: var(--noble-gray-900);
    stroke: var(--noble-gray-900);
    transition:
      fill $transition-duration,
      stroke $transition-duration;
  }

  @media (hover: hover) {
    &:hover {
      filter: brightness($filter-brightness);

      svg {
        fill: var(--noble-gray-1000);
        stroke: var(--noble-gray-1000);
      }
    }
  }

  /* stylelint-disable-next-line order/order */
  &:active {
    transform: scale($transform-scale-active);
  }

  &:disabled {
    filter: opacity($filter-opacity);
    pointer-events: none;
  }
}

@mixin round-btn(
  $btn-padding: calc(var(--tiny-offset) * 1.5),
  $btn-bg: var(--noble-white-100),
  $btn-hover-bg: var(--white-tr),
  $btn-fill: var(--steam-green-800),
  $btn-stroke: var(--steam-green-800)
) {
  display: flex;
  align-items: center;
  justify-content: center;
  justify-self: center;
  border-radius: 50%;
  padding: $btn-padding;
  width: max-content;
  background-color: $btn-bg;
  transition:
    filter $transition-duration,
    color $transition-duration,
    background-color $transition-duration,
    transform $transition-duration;

  @media (hover: hover) {
    &:hover {
      background-color: $btn-hover-bg;

      svg {
        fill: $btn-fill;
        stroke: $btn-stroke;
      }
    }
    /* stylelint-disable-next-line order/order */
    &:active {
      transform: scale($transform-scale-active);
    }

    &:disabled {
      filter: opacity($filter-opacity);
      pointer-events: none;
    }
  }
}

@mixin svg-logo(
  $logo-width: var(--small-offset),
  $logo-height: var(--small-offset),
  $logo-fill: var(--noble-gray-900),
  $logo-stroke: var(--noble-gray-900)
) {
  display: flex;
  align-items: center;
  justify-content: center;
  justify-self: center;

  svg {
    width: $logo-width;
    height: $logo-height;
    fill: $logo-fill;
    stroke: $logo-stroke;
    transition:
      fill $transition-duration,
      stroke $transition-duration;
  }
}

@mixin gradient-outline-linear($border-width, $color-center, $color-outer, $direction: to right) {
  border: $border-width solid transparent;
  border-image: linear-gradient($direction, $color-center 50%, $color-outer 100%) 1;
  border-image-slice: 1;
}

@mixin gradient-border-bottom-linear($border-width, $color-center, $color-outer, $direction: to right) {
  border-bottom: $border-width solid transparent;
  background-image: linear-gradient($direction, $color-center, $color-outer);
  background-position: 0 calc(100% + #{$border-width});
  background-size: 100% $border-width;
  background-repeat: no-repeat;
}
